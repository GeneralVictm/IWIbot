{
  "_args": [
    [
      {
        "raw": "get-user-media-promise@^1.1.0",
        "scope": null,
        "escapedName": "get-user-media-promise",
        "name": "get-user-media-promise",
        "rawSpec": "^1.1.0",
        "spec": ">=1.1.0 <2.0.0",
        "type": "range"
      },
      "C:\\Users\\nkreu\\git\\IWIbot\\IWIbotWebServer\\node_modules\\watson-speech"
    ]
  ],
  "_from": "get-user-media-promise@>=1.1.0 <2.0.0",
  "_id": "get-user-media-promise@1.1.1",
  "_inCache": true,
  "_location": "/get-user-media-promise",
  "_nodeVersion": "7.4.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/get-user-media-promise-1.1.1.tgz_1484255376070_0.3916060554329306"
  },
  "_npmUser": {
    "name": "nfriedly",
    "email": "nathan@nfriedly.com"
  },
  "_npmVersion": "4.0.5",
  "_phantomChildren": {},
  "_requested": {
    "raw": "get-user-media-promise@^1.1.0",
    "scope": null,
    "escapedName": "get-user-media-promise",
    "name": "get-user-media-promise",
    "rawSpec": "^1.1.0",
    "spec": ">=1.1.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/watson-speech"
  ],
  "_resolved": "https://registry.npmjs.org/get-user-media-promise/-/get-user-media-promise-1.1.1.tgz",
  "_shasum": "35574d1718e73a163dd2401865b44cedfd9395f8",
  "_shrinkwrap": null,
  "_spec": "get-user-media-promise@^1.1.0",
  "_where": "C:\\Users\\nkreu\\git\\IWIbot\\IWIbotWebServer\\node_modules\\watson-speech",
  "author": {
    "name": "Nathan Friedly - http://nfriedly.com"
  },
  "bugs": {
    "url": "https://github.com/nfriedly/get-user-media-promise/issues"
  },
  "dependencies": {},
  "description": "Light-weight wrapper for the newer Promise-based MediaDevices.getUserMedia API with a fallback to navigator.getUserMedia (and it's prefixed variants)",
  "devDependencies": {
    "browserify": "^13.0.0",
    "envify": "^4.0.0",
    "eslint": "^3.13.1",
    "karma": "^1.3.0",
    "karma-browserify": "^5.0.1",
    "karma-chrome-launcher": "^2.0.0",
    "karma-firefox-launcher": "^1.0.0",
    "karma-mocha": "^1.3.0",
    "mocha": "^3.2.0",
    "uglify-js": "^2.6.2"
  },
  "directories": {},
  "dist": {
    "shasum": "35574d1718e73a163dd2401865b44cedfd9395f8",
    "tarball": "https://registry.npmjs.org/get-user-media-promise/-/get-user-media-promise-1.1.1.tgz"
  },
  "gitHead": "4877eb02047656d456c6212f84e8f83d1d4df8ab",
  "homepage": "https://github.com/nfriedly/get-user-media-promise#readme",
  "keywords": [
    "getUserMedia",
    "webkitGetUserMedia",
    "mozGetUserMedia",
    "navigator.msGetUserMedia",
    "get",
    "user",
    "media",
    "promise",
    "MediaDevices",
    "ponyfill",
    "polyfill",
    "pollyfill",
    "shim",
    "wrapper",
    "helper",
    "light",
    "small",
    "tiny"
  ],
  "license": "Apache-2.0",
  "main": "lib/get-user-media-promise.js",
  "maintainers": [
    {
      "name": "nfriedly",
      "email": "nathan@nfriedly.com"
    }
  ],
  "name": "get-user-media-promise",
  "optionalDependencies": {},
  "readme": "# get-user-media-promise\n\n[![Build Status](https://travis-ci.org/nfriedly/get-user-media-promise.svg?branch=master)](https://travis-ci.org/nfriedly/get-user-media-promise)\n[![npm-version](https://img.shields.io/npm/v/get-user-media-promise.svg)](https://www.npmjs.com/package/get-user-media-promise)\n![bower-version](http://badge.fury.io/bo/get-user-media-promise.svg)\n\nLight-weight Ponyfill/Polyfill for [navigator.mediaDevices.getUserMedia] (the newer newer [Promise]-based API). Wraps the older callback-based [navigator.getUserMedia] when necessary.\n\nBehaves as a ponyfill (doesn't touch globals) when used via browserify/webpack/etc. or as a polyfill (sets globals) when included as a standalone library.\n\nLess than 0.5kb after minification and gzipping (about 5% of the size of the [other] getUserMedia shim).\n\n**Note**: this will only work in web browsers, and only [fairly current ones](http://caniuse.com/#feat=stream) at that. \n\nAdditionally, this library does not attempt to reformat constraints for cross-browser support, so if you need advanced audio/video constraints, the [other library][other] may be a better choice.\n\n## Installation:\n\n### npm\n\n    npm install --save get-user-media-promise\n    \n### Bower\n\n    bower install --save get-user-media-promise\n    \n### Standalone\n \n Download the [latest release][releases] from GitHub.\n\n## Usage: \n\n * With a bundler such as Require.js, Browserify, or WebPack: require() the module and it returns a `getUserMedia()` method that will always return a Promise or Promise-like object.\n * As a standalone library: when neither `define()` nor `module` are defined, the module will go into polyfill mode, setting `navigator.mediaDevices.getUserMedia()` if that method is not already defined or doing nothing if it is.\n \n Then:\n \n```js\nvar getUserMedia = require('get-user-media-promise'); // or navigator.mediaDevices.getUserMedia when used standalone\n\ngetUserMedia({audio: true, video: true})\n  .then(function(mediaStream) {\n    console.log(mediaStream);\n  })\n  .catch(function(error) {\n    console.log('error');\n  });\n```\n\nCheck browser support ahead of time via the `isSupported` property:\n\n```js\nconsole.log(getUserMedia.isSupported);\n```\n\n[navigator.mediaDevices.getUserMedia]: https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\n[Promise]: https://developer.mozilla.org/en-US/docs/Web/API/Promise\n[navigator.getUserMedia]: https://developer.mozilla.org/en-US/docs/Web/API/Navigator/getUserMedia\n[other]: https://www.npmjs.com/package/getusermedia\n[releases]: https://github.com/nfriedly/get-user-media-promise/releases\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/nfriedly/get-user-media-promise.git"
  },
  "scripts": {
    "minify": "mkdir dist; uglifyjs --compress --mangle --output dist/get-user-media-promise.min.js lib/get-user-media-promise.js",
    "test": "eslint lib/*.js test/*.js && karma start --single-run"
  },
  "version": "1.1.1"
}
